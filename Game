
import pickle
import sys
import time

def type_out_text(text):
    for char in text:
        sys.stdout.write(char)
        sys.stdout.flush()
        time.sleep(0.05)
    print()

playerName = input("What is your name?")
type_out_text(f"Welcome {playerName} to this adventure. You will have to face your fears on today's journey.")
type_out_text("You are a knight in a castle searching for his king's lost treasure.")
type_out_text("The castle has been taken over by an evil sorcerer. You must successfully defeat him in order to acquire the treasure.")
instructions = """\nINSTRUCTIONS
To navigate the castle, simply type the direction of one of the available exits.
(Ex. 'north, south, east, west')
To pick an item, input 'get' and the name of the item.
To use an item input 'use' and then the item name.
To save input 'save' to load input 'load'.
To see this message again input 'help'"""
type_out_text(instructions)
input("Are you ready to begin this epic quest?\n")
time.sleep(2)
type_out_text("I don't care if you are or not because you don't really have an option...Good luck!")
time.sleep(1)


class Room():
    def __init__(self, name, description, exits, items = []):
        self.name = name
        self.description = description
        self.exits = exits
        self.items = items

        
    def display(self):
        print(self.name)
        print(self.description)
        print("Exits: ")
        for direction in self.exits:
            print(direction)
        if self.items:
            print("Items: ")
            for item in self.items:
                print(item)
                
class Game():
    def __init__(self):
        self.rooms = []
        self.current_room = None
        self.inventory = []
        
    def add_room(self, room):
        self.rooms.append(room)
        
    def start(self):
        self.current_room = self.rooms[0]
        self.play()
        
    def play(self):
        while True:
            self.current_room.display()
            command = input("What would you like to do?\n")
            if command in self.current_room.exits:
                 for room in self.rooms:
                    if room.name == self.current_room.exits[command]:
                        self.current_room = room
                        break
            
            elif command == "save":
                with open("save_game.pickle", "wb") as f:
                    pickle.dump((self.current_room, self.inventory), f)
                print("Game saved.")
                    
            elif command == "load":
                try:
                    with open("save_game.pickle", "rb") as f:
                        self.current_room, self.inventory = pickle.load(f)
                    print("Game loaded.")
                except FileNotFoundError:
                    print("No save file found.")
            
            elif command == "instructions":
                print(instructions)
        
            elif command.startswith("get "):
                item_name = command[4:]
                
                if item_name in self.current_room.items:
                    self.inventory.append(item_name)
                    self.current_room.items.remove(item_name)
                    print(f"You have picked up {item_name}.")
                    
                else:
                    print(f"{item_name} is not in this room.")
                    
            elif command.startswith("use "):
                item_name = command[4:]
                
                if item_name == "Key" and "key" in self.inventory and self.current_room.name == "Treasure Room":
                    print("Congratulations! You have unlocked the treasure chest and found the treasure!")
                    break
                
                elif item_name == "book" and "book" in self.inventory and self.current_room.name == "Library":
                    print("You read a page of the book. It talks about an ancient potion of invisbility.\n")
                    self.inventory.remove("book")
                    
                elif item_name == "food" and "food" in self.inventory and self.current_room.name == "Cellar":
                    print("You give an old man some food. He thanks you by giving you a gold coin.")
                    self.inventory.append("coin")
                    
                elif item_name == "coin" and "coin" in self.inventory and self.current_room.name == "Dungeon":
                    print("You pay a man and he gives you a potion in return\n")
                    self.inventory.remove("coin")
                    self.inventory.append("potion")
                
                elif item_name == "sword" and "sword" in self.inventory and self.current_room.name == "Cellar":
                    print("The old man was your only chance...You lose.")
                    break
                    
                elif item_name == "sword" and "sword" in self.inventory and self.current_room.name == "Sorcerers Room":
                    print("You stab the Sorcerer. He is dead. A key falls out of his cloak.\nYou take it.")
                    self.inventory.remove("sword")
                    self.inventory.append("Key")
                
                elif item_name == "potion" and "potion" in self.inventory and self.current_room.name == "Sorcerers Room":
                    print("You use the potion. It startles the cloaked figure.\nOut of fear it turns around and slashes you with a sword.\nBetter luck next time.")
                    break
                
                elif item_name == "potion" and "potion" in self.inventory:
                    print("You drink the potion. Nothing seems to have happened.\nI guess that was useless.")
                    self.inventory.remove("potion")
                
                    
                else:
                    print("You can't use that here.")
            else:
                print("Invalid command.")
                
room1 = Room("Entrance", "You are standing in front of a castle entrance.", {"north": "Foyer"})
room2 = Room("Foyer", "You are standing in a grand foyer.", {"north": "Library", "east": "Dining Room", "south": "Entrance", "west": "Oratory"})
room3 = Room("Library", "You are standing in a large library.", {"south": "Foyer"}, ["book"])
room4 = Room("Dining Room", "You are standing in a spacious dining room.", {"west": "Foyer", "south": "Kitchen"})
room5 = Room("Kitchen", "You are standing in a busy kitchen.", {"north": "Dining Room", "east": "Garden"}, ["food"])    
room6 = Room("Garden", "You are standing in a beautiful garden with colorful flowers.", {"east": "Fountain", "west": "Kitchen"})
room7 = Room("Fountain", "You are standing in front of a grand fountain.", {"west": "Garden", "north": "Bedroom"})
room8 = Room("Bedroom", "There is an empty bed that is neatly made.", {"north": "Lavatories", "south": "Fountain", "east": "Gaurdroom"})
room9 = Room("Lavatories", "Nothing but an odd smell.", {"south": "Bedroom"})
room10 = Room("Gaurdroom", "Full of armor and a shiny sword.", {"west": "Bedroom", "east": "Dungeon Entrance"}, ["sword"])
room11 = Room("Oratory", "A private chapel.", {"east": "Foyer", "north": "Storeroom", "south": "Cellar"})
room12 = Room("Storeroom", "A room full of empty shelves.", {"south": "Oratory"})
room13 = Room("Cellar", "Full of cobwebs and unused storage space. It smells like moldy cheese.\nWait a second...An old man asks for some food.", {"north": "Oratory"})
room14 = Room("Dungeon Entrance", "Small and steep stairs lead you down the dark dungeon.", {"west": "Gaurdroom", "east": "Dungeon Cell", })
room15 = Room("Dungeon Cell", "You are closed off by iron bars. But wait... It looks like somebody broke through.\nThere is a cloaked figure in the corner.", {"west": "Dungeon Entrance", "east":"Dungeon Hall "})
room16 = Room("Torture Chamber ", "A dead man lays in a corner. There is a basket of heads near a guillotine. They look fresh.\nThere is no turning back now", {"south": "Sorcerers Room"})
room17 = Room("Dungeon Hallway", "It is very tight and oddly quiet. It smells odd.", {"west": "Dungeon Cell", "east": "Torture Chamber"})
room18 = Room("Sorcerers Room", "There is a powerful Sorcerer ready to kill you. You must defend yourself.", {"south": "Treasure Room"})
room19 = Room("Treasure Room", "You have found the treasure room!", {}, ["treasure chest"])      

game = Game()
game.add_room(room1)
game.add_room(room2)
game.add_room(room3)
game.add_room(room4)
game.add_room(room5)
game.add_room(room6)
game.add_room(room7)
game.add_room(room8)
game.add_room(room9)
game.add_room(room10)
game.add_room(room11)
game.add_room(room12)
game.add_room(room13)
game.add_room(room14)
game.add_room(room15)
game.add_room(room16)
game.add_room(room17)
game.add_room(room18)
game.add_room(room19)

game.start()